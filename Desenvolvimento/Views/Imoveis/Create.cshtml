@model Desenvolvimento.Models.Imoveis
@{
    ViewBag.Title = "Criar - Imóveis";
}

<h2>Criar - Imóveis</h2>

@using (Html.BeginForm(null, null, new { @id = string.Empty }, FormMethod.Post, new { @id = "formImoveisCreate" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.tipo_negocio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" name="tipo_negocio" , id="tipo_negocio">
                    <option value="-1">Selecione</option>
                    <option value="Aluguel">Aluguel</option>
                    <option value="Compra">Compra</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nome_cliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" name="id_cliente" , id="id_cliente">
                    <option value="-1">Selecione</option>
                    @foreach (var item in ViewBag.Nome)
                    {
                        <option value="@item.ID">@item.nome_cliente</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ativo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ativo)
                    @Html.ValidationMessageFor(model => model.ativo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar para Lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.mask.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script>
        $('.cpf').mask('000.000.000-00', { reverse: true });

        jQuery.validator.addMethod('selectcheck', function (value) {
            return (value != '-1');
        }, "Campo Obrigatório");

        $("#formImoveisCreate").validate({
            rules: {
                tipo_negocio: {
                    selectcheck: true,
                },
                descricao: {
                    required: false,
                },
                valor: {
                    required: true,
                    number: true,
                },
            },
            messages: {
                tipo_negocio: {
                    selectcheck: "Campo Obrigatório",
                },
                descricao: {
                    required: "Campo Obrigatório",
                },
                valor: {
                    required: "Campo Obrigatório",
                    number: "Esse campo deve ser numerico",
                },
            }
        });
    </script>
}
